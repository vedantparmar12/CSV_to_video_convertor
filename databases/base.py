from abc import ABC, abstractmethod
from typing import List, Dict, Any


class VectorDB(ABC):
    @abstractmethod
    def setup(self, dim: int): ...
    @abstractmethod
    def upsert(self, vectors: List[List[float]], payloads: List[Dict[str, Any]]): ...
    @abstractmethod
    def search(self, query: List[float], top_k: int) -> List[Dict[str, Any]]: ...
    @abstractmethod
    def teardown(self): ...
    @abstractmethod
    def close(self): ...
